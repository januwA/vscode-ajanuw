{
  "vuex 模块": {
    "prefix": "vuex store module",
    "scope": "javascript",
    "body": [
      "//this.\\$store.commit(\"${0}Module/initUserinfo\", data);",
      "//this.\\$store.dispatch(\"${0}Module/login\", data);",
      "export const ${0}Module = {",
      "  namespaced: true,",
      "  state: {",
      "    userinfo: null, // 用户信息",
      "  },",
      "  mutations: {",
      "    /**",
      "     * 初始化所有 state",
      "     * @param {Object} state",
      "     * @param {Object} data",
      "     */",
      "    initState(state, data) {",
      "      Object.assign(state, data);",
      "    },",
      "",
      "    initUserinfo(state, data) {",
      "      state.userinfo = data;",
      "    },",
      "  },",
      "  actions: {",
      "    /**",
      "     * 用户通过手机号登陆",
      "     * @param {Object} context",
      "     * @param {Object} data",
      "     */",
      "    async login({ commit, state }, data) {",
      "      return new Promise((_res, _rej) => {",
      "\t\t// TODO:",
      "      });",
      "    },",
      "  },",
      "  getters: {",
      "    /**",
      "     * @param {Object} state",
      "     * @param {Object} getters",
      "     */",
      "    isVip(state, getters) {",
      "      return state.userinfo?.is_vip == 1 ?? false;",
      "    },",
      "  },",
      "};"
    ]
  },
  "vuex 初始化": {
    "prefix": "vuex store",
    "scope": "javascript",
    "body": [
      "// import store from './store'",
      "// const app = new Vue({ store, ...App })",
      "import Vue from \"vue\";",
      "import Vuex from \"vuex\";",
      "Vue.use(Vuex);",
      "",
      "import { UserModule } from './user.module';",
      "",
      "const state = {",
      "  curSelect: {},",
      "};",
      "const mutations = {",
      "  setCurSelect(state, data) {",
      "    state.curSelect = data;",
      "  },",
      "};",
      "const actions = {};",
      "const getters = {};",
      "",
      "export default new Vuex.Store({",
      "  modules: {",
      "    UserModule",
      "  },",
      "  actions,",
      "  getters,",
      "  mutations,",
      "  state,",
      "});"
    ]
  }
}